#LIBRARIES
library(sf)
library(ggplot2)
library(dplyr)
library(tidyverse)

#LOADING IN NYC BASEMAP
setwd("/Users/tiff/Desktop/CITIBIKES")
nyc <- st_read("/Users/tiff/Desktop/CITIBIKES/nyc_shapefile")
nyc <- st_set_crs(nyc, 'EPSG:4326')
nyc <- nyc %>%
  filter(boroname != "Staten Island")

#MAP OF NYC (EXCLUDING STATEN ISLAND)
ggplot() +
  geom_sf(data = nyc, fill = "white", color = "black") +
  theme_minimal()

nyc #NYC CENSUSTRACT DETAILS

#MEDIANINCO IN NYC
ggplot()+
  geom_sf(nyc, mapping=aes(fill=as.numeric(medianinco)), color = "gray")+
  scale_fill_gradient(low="white", high="orchid", na.value="gray")+
  theme_minimal()+
  labs(fill="Median Income ($)", title="Median Income in NYC")

#NEXT GOAL: MEDIANINCO VS ACCESSIBLE CITIBIKE STATIONS
#ARGUMENT: HIGH MEDIANINCO AREAS WILL HAVE MORE CITIBIKE STATIONS

#LOAD IN CITIBIKE DATA 
#TIMEFRAME: JANUARY 2023 
setwd("/Users/tiff/Desktop/CITIBIKES")
trip_data <- read.csv("202301-citibike-tripdata.csv") 
head(trip_data)

#TAKES TRIP DATA FROM WEEK 1: JAN 1 - JAN 8
#NOTE: HAVEN'T BEEN ABLE TO USE WEEK1 BECAUSE THE CSV FILES HAVE CHANGED
trip_data <- trip_data %>%
  mutate(started_at = as.POSIXct(started_at, format = "%Y-%m-%d %H:%M:%S"))
week1 <- trip_data %>%
  filter(started_at >= as.POSIXct("2023-01-01 00:00:00") & started_at < as.POSIXct("2023-01-08 00:00:00"))

#TRANSFORMING LAT/LONG COORDINATES FROM CITIBIKE DATA INTO SF OBJECTS
week1 <- week1 %>%  
  filter(start_lng < 0) %>% 
  st_as_sf(coords = c("start_lng", "start_lat"), crs = 4326)
head(week1)
typeof(week1) #TYPE: List

#THIS KEEPS COUNT OF HOW MANY BIKES WERE USED AT EACH START STATION
nyc$count <- lengths(st_intersects(nyc, week1))
head(nyc)

#RETRIEVING ALL GEOMETRY POINTS FROM WEEK 1
week1_geo <- week1 %>%
  select(geometry)
head(week1_geo)
typeof(week1_geo) #TYPE: list

 
#FILTERS OUT GEOMETRY POINTS IN BROOKLYN DATA FROM CENSUS TRACT
bk_geo <- nyc %>%
  filter(boroname=="Brooklyn") %>%
  select(geometry)
head(bk_geo)

#RETRIVES GEOMETRY POINTS FOR BROOKLYN ONLY
 ggplot()+
  geom_sf(data = bk, fill = "white", color = "black") +
  geom_sf(bk, mapping=aes(fill=as.numeric(medianinco)), color = "gray")+
  scale_fill_gradient(low="#64b5fa", high="#013663", na.value="gray")+
  geom_sf(data = bk_week1, color="#66CC99", alpha=(1/254.99)*3)+
  theme_minimal()
 
 #BK
 bk <- nyc %>%
   filter(boroname == "Brooklyn") %>%
   select(geometry)
 head(bk)
 #xmin: -74.01518
 #ymin: 40.64926
 #xmax: -73.99067
 #ymax: 40.70313
 
mh <- nyc %>%
  filter(boroname == "Manhattan") %>%
  select(geometry)
head(mh)
#xmin = -74.04773
#ymin = 40.68292
#xmax: -73.97597
#ymax: 40.7147

#PLOTTING MEDIANINCO VS STARTING STATION IN NYC 
 ggplot() +
  geom_sf(data = nyc, fill = "white", color = "black") +
  geom_sf(nyc, mapping=aes(fill=as.numeric(medianinco)), color = "gray")+
  scale_fill_gradient(low="#64b5fa", high="#013663", na.value="gray")+
  geom_sf(data = week1, color="#66CC99", alpha=(1/254.99)*3)+
  theme_minimal()

#REARRANGING TRIP_DATA STATION_IDS
#PURPOSE: FIND CORRELATION BETWEEN STATION_IDS AND BOROUGH NAMES 
#GOAL: TO GRAPH #OF STATIONS IN EACH 
#REALIZATION: THERE'S NO PARTICULAR PATTERN IN NAMING THE STATION_IDS AND AREN'T INCREMENTING BY A CERTAIN NUMBER
station_ids1 <- trip_data %>%
  select(start_station_id) 
summary(station_ids1)
summary(as.numeric(unlist(station_ids1)))
#Min. 2733
#1st Qu. 5291
#Median 6022
#Mean 3rd Qu. 5965
#Max. 8841
#NA's 68

#APPROACH 02
bk <- nyc %>%
  filter(boroname =="Brooklyn") %>%
  select(count)
summary(bk)
#Min. : 0
#1st Qu. : 0
#Median : 0
#Mean : 320.5
#3rd Qu. : 0
#Max : 14305

mh <- nyc %>%
  filter(boroname == "Manhattan") %>%
  select(count)
summary(mh)
#Min. : 0
#1st Qu. : 0
#Median : 0
#Mean : 2355
#3rd Qu. : 0
#Max : 33079

bx <- nyc %>%
  filter(boroname == "Bronx") %>%
  select(count)
summary(bx)
#Min. : 0
#1st Qu. : 0
#Median : 0
#Mean : 80.71
#3rd Qu. : 0
#Max : 2471.00

qs <- nyc %>%
  filter(boroname == "Queens") %>%
  select(count)
summary(qs)
#Min. : 0
#1st Qu. : 0
#Median : 0
#Mean : 93.67
#3rd Qu. : 0
#Max : 8945

#PLOTTING BAR GRAPH OF THE MEAN NUMBER OF TRIPS STARTED WITHIN EACH BOROUGH IN JAN 2023
boroughs <- data.frame(value = c("Bronx", "Queens", "Brooklyn", "Manhattan"))
mean_count <- data.frame(value = c(80.71, 93.67, 320.5, 2355))
data <- data.frame(
  Boroughs=c("Bronx", "Queens", "Brooklyn", "Manhattan") ,  
  Mean=c(80.71, 93.67, 320.5, 2355)
  )

#GOAL: RETRIEVE THE MEAN OF THE MEDIANINCO VALUES FOR EACH BOROUGH
#NOTE: NOT WORKING BECAUSE EACH ELEMENT IN BX_INCO IS A LIST
bx_inco <- nyc %>%
  filter(boroname == "Bronx") %>%
  select(medianinco)
summary(as.numeric(unlist(bx_inco)))
