# -*- coding: utf-8 -*-
"""cp1graphs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vuOTbdZ4VPWwwmdJiDe9LGKeIA34I7hc
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

citibike = pd.read_csv("201306-citibike-tripdata.csv")

citibike

citibike['tripduration'] = citibike['tripduration'].astype("string")

print(citibike.dtypes)

import pandas as pd

# Read the dataset from CSV file
df = citibike

# Function to extract the year from a string
def extract_year(string):
    # List of years to check for
    years = ["2013", "2014", "2015", "2016", "2017"]

    # Iterate over years and check if any is present in the string
    for year in years:
        if year in string:
          return year
        else:
          return string

# Apply the function to the 'tripduration' column and create a new column 'yearofcollection'
df['yearofcollection'] = df['starttime'].apply(extract_year)

# Print the DataFrame
print(df)

citibike['yearofcollection'] = citibike['yearofcollection'].astype("int")

citibike['gender'] = citibike['gender'].astype("string")

citibike['age'] = citibike['yearofcollection']-citibike['birth year']

citibike['age'].value_counts()

sns.scatterplot(data=citibike, x="age", y="tripduration")
plt.xscale("log")
plt.yscale("log")
plt.show()

start = citibike["start station name"].value_counts().rename_axis('start names').reset_index(name='counts')
start = start.head(15)
start

sns.barplot(data=start, x="start names", y = "counts")

plt.ylabel("Count")
plt.xlabel("Start Station Name")
plt.xticks(rotation=90)

plt.show()

end = citibike["end station name"].value_counts().rename_axis('end names').reset_index(name='counts')
end = end.head(15)
end

sns.barplot(data=end, x="end names", y = "counts")

plt.ylabel("Count")
plt.xlabel("End Station Name")
plt.xticks(rotation=90)

plt.show()